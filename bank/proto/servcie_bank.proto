syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "rpc_create_user.proto";
import "rpc_login_user.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/AdamDomagalsky/goes/bank/proto/pb";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
      title: "WIP Banks API";
      version: "1.0";
      contact: {
        name: "Adams";
        url: "https://github.com/AdamDomagalsky/goes/bank";
        email: "adam@domagalsky.dev";
      };
      license: {
        name: "BSD 3-Clause License";
        url: "https://github.com/grpc-ecosystem/grpc-gateway/blob/main/LICENSE.txt";
      };
      extensions: {
        key: "x-something-something";
        value {string_value: "TODO"}
      }
    };
};

service Bank {
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
        option (google.api.http) = {
                post: "/v1/create_user"
                body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
          description: "Use this API to create a new user";
          summary: "Creates a new user";
        };
    };
    rpc LoginUser(LoginUserRequest) returns (LoginUserResponse) {
        option (google.api.http) = {
                post: "/v1/login_user"
                body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
          description: "Use this API to login a user, get access token & refresh token";
          summary: "Login user";
        };
    };
}